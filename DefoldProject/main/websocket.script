
function init(self)
	self.ws = websocket.connect("ws://localhost:8080", {}, function(self, conn, data)
		if data.event == websocket.EVENT_DISCONNECTED then
			print("internal: DISCONNECTED")

		elseif data.event == websocket.EVENT_CONNECTED then
			print("internal: CONNECTED")

		elseif data.event == websocket.EVENT_ERROR then
			print("internal: ERROR", data.error)

		elseif data.event == websocket.EVENT_MESSAGE then
			local message = data.message
			print("received message, (RAW TEXT) =>");
			pprint(message)

			local binary_message = {}
			for i = 1, #message do
				table.insert(binary_message, string.byte(message, i, i))
			end

			print("(BINARY VERSION) =>")
			pprint(binary_message)
		end
	end)
end

function final(self)
	websocket.disconnect(self.ws)
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
